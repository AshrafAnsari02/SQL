-- Assignment Questions
-- Practice Question
-- Basic Aggregate Functions:

-- Question 1:
-- Retrieve the total number of rentals made in the Sakila database. Hint: Use the COUNT() function.
select count(rental_id) from rental;

-- Question 2:
-- Find the average rental duration (in days) of movies rented from the Sakila database. Hint: Utilize the AVG() function.
use sakila ;

select avg(datediff(return_date, rental_date)) as Avg_rental_duration from sakila.rental;

-- String Functions:
-- Question 3:
-- Display the first name and last name of customers in uppercase. Hint: Use the UPPER () function.
select upper(first_name), upper(last_name) from customer; 

-- Question 4:
-- Extract the month from rental ID. Hint: Employ the MONTH() function. W SKILLS
select rental_id, month(renatal_date) from sakila.rental;

-- GROUP BY:
-- Question 5:
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals). Hint: Use COUNT () in conjunction with GROUP BY.
select customer_id, count(rentals) from customer ;

-- Question 6:
-- Find the total revenue generated by each store. Hint: Combine SUM() and GROUP BY.
select store_id, sum(amount) as Total_Revenue from payment group by store_id;

-- Joins:

-- Question) Display the title of the movie, customer's first name, and last name who rented it. Hint: Use JOIN between the film, inventory, rental, and customer tables.
select f.title, c.first_name, c.last_name from rental as r join inventory as i on r.inventory_id = i.inverntory join film as f on f.film_id = i.inventory join customer as c on c.customer_id = r.customer_id;

-- Mastering full stack data analytics

-- Assignment Questions

-- SKILLS

-- Question 8:

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind." Hint: Use JOIN between the film actor, film, and actor tables.
select (a.first_name, a.last_name) as name from actor as a join film_actor as fa on a.actor_id = fa.actor_id join film as f on f.film_id = fa.film_id where f.title = "Gone with the wind";

-- GROUP BY:

-- Question 1:

-- Determine the total number of rentals for each category of movies. Hint: JOIN film_category, film, and rental tables, then use COUNT () and GROUP BY.
select c.name as category_name, count(r.rental_id) as total_rentals from rental r join inventory i on r.inventory_id = i.inventory_id join film f on i.film_id = f.film_id join film_category fc on f.film_id = fc.film_id join category c on fc.category_id = c.category_id group by c.name;

-- Question 2:

-- Find the average rental rate of movies in each language. Hint: JOIN film and language tables, then use AVG () and GROUP BY.
select l.name as language, avg(f.rental_rate) from film as f join  language as l on f.lanaguage_id = l.language_id group by l.language;  

-- Joins:

-- Question 3:

-- Retrieve the customer names along with the total amount they've spent on rentals. Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.
select (c.first_name, c.last_name) as customer_name, sum(p.amount) from customer as c 
join customer on c.customer_id = p.customer_id 
join payment as p on p.rental_id = r.rental_id 
group by c.customer_name;

-- Question 4:

-- List the titles of movies rented by each customer in a particular city (e.g., 'London'). Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.
select f.title, cu.first_name, cu.last_name, c.city from film as f 
join customer as cu on c.address_id = r.address_id
join address as a on a.city_id = c.city_id
join city as c on c.last_update = r.last_update
join rental as r on r.inventory_id = i.inventory_id 
join intentory as i on i.film_id = f.film_id
group by city;

-- Advanced Joins and GROUP BY:

-- Question 5:

-- Display the top 5 rented movies along with the number of times they've been rented. Hint: JOIN film, inventory, and rental tables, then use COUNT() and GROUP BY, and limit the results.
select f.title, count(r.rental_id)  as r.rented_movies from film as f
join rental as r on i.inventory_id = i.inventory_id
group by f.title
order by  r.rented_movies desc
limit 5; 


-- Question 6:

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.
select c.first_name, c.last_name, count(c.store_id) from customer as c
join rental as r on i.inventory_id = r.inventory_id 
join customer on i.store_id = c.store_id 
group by c.store_id
where store_id = 1 and store_id = 2; 
